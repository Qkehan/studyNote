<?php
    header("Content-type:text/html;charset=utf-8");
    
    echo '欢迎您！！';
    echo date("Y-m-d H:i:s")."<br>";  
    echo '【3-数组】'."<br>"; 
    echo "当前文件的路径为：".__FILE__.'<br><hr>';    //获取当前文件路径  
    //
    //
    //***********【数组的概述】********************
    // 变量中保存单个数据，而数组中则保存的是多个变量的合集。使用数组的目的就是将多个相关联的数据组织在一起形成一个整体，作为一个单元使用。   
    //------------【数组的形成】------------
    // 由于数组是由数组元素组成的，而数组中的元素又分为两部分，分别为键和值。   
    // “键”是数组元素的识别名称，也被称为数组下标。   
    // “值”为数组元素的内容。   
    // “键”和值之间使用“=>”连接。   
    // 数组各个元素之间使用逗号“,”分割。最后一个元素后面的逗号可以省略。   
    //示例：  
    $week = array("a"=>"星期一","b"=>"星期二","c"=>"星期三");   // 包含三个元素 $week["a"]  $week["b"]  $week["c"]     
    //
    //   
    // 
    //
    //******************【PHP数组的分类】*************
    // PHP中将数组分为一维数组、二维数组、多维数组，但是无论是一维还是二维，可以统一讲数组分为两种：数字索引数组（indexed array）和关联数组（associative array）。       
    //1、数字索引数组：数字索引数组，下标（键名）由数字组成，默认从0开始。      
    $arr_int = array("PHP入门与实战","C#入门与实战","VB入门与实战");    
    //2、关联数组：关联数组的键名可以是数字和字符串混合的形式。    
    $arr_string = array("PHP"=>"PHP入门与实战","Java"=>"Java入门与实战","C#"=>"C#入门与实战");        
    //  
    //
    //*****************【PHP数组创建、修改和删除】*****************
    //
    //------------【数组创建】-----------
    // 与其他语言的数组实现方式不同，PHP不需要在创建数组时指定其大小；    
    // 因为PHP是一种松散类型的语言，所以甚至不需要在使用前声明；   
    //
    //在PHP中创建数组的方式主要有2种：  
    //1、直接为数组元素赋值。    
    // 赋值方式定义数组就是创建一个数组变量，然后使用赋值运算符直接给变量赋值。语法：     
    // $arrayName[key]=value;  
    // $arrayName[]=value;    
    // 其中，键值key可以是整型或者字符串，值value可以是任何类型。   
    // 注意：通过直接为数组元素赋值的方式声明数组时，要求同一数组元素中的数组名相同。   
    //示例：
    $arr[]='PHP';  
    $arr[]='java'; 
    $arr[3]='C语言';
    $arr[5]='C++';  
    $arr['sub']='IOS';  
    $arr[]='网页设计';  
    var_dump($arr);   
    echo "<br>";  
    //
    //2、应用array()函数创建数组。    
    // array([key]=>value,[key]=>value,......)   示例：    
    $info=array('id'=>1,'name'=>'Tom');    
    $fruit=array(1=>'apple',3=>'banana');   
    $num=array(1,4,7,9);   
    $mix=array('tel'=>110,'help',3=>'msg');    
    //
    //
    //在定义数组时，需要注意以下几点：   
    //1、数组元素的下标只有整型和字符串两种，如果有其他类型，则会进行类型转换。   
    //2、在PHP中合法的整数值下标会被自动的转换为整型下标。    
    //3、若数组存在相同的下标时，后面的元素值会覆盖前面的元素值。   
    //4、如果给出方括号但没有指定键，则取当前最大整数索引值，新的键将是该值加1，如果当前还没有整数索引，则键将为0。     
    //示例：  
    $arr=array("a"=>"理论","b"=>"教程");    
    $arr[]=99;   
    $arr[]=100;  
    var_dump($arr);  
    echo "<br>";  
    //
    //---------------【访问、删除、修改数组】------------
    //1、访问数据：  
    // 由于数组中的元素是由键和值组成的，而键又是数组元素的唯一标识，因为可以使用数组元素的键来获取该元素的值。示例：      
    $info1=array('id'=>1,'name'=>'Tom');   
    echo $info1['name'];   //Tom   
    echo "<br>";  
    // 但若想要查看数组中的所有元素，使用以上方式会很繁琐，为此，PHP提供了print_r()和var_dump()函数，专门用于输出数组中的所有元素。示例：      
    $info1=array('id'=>1,'name'=>'Tom');   
    print_r($info1);  //Array ( [id] => 1 [name] => Tom )   
    echo "<br>";  
    var_dump($info1);   //array(2) { ["id"]=> int(1) ["name"]=> string(3) "Tom" }   
    echo "<br>";  
    // print_r()函数可以按照一定的格式显示数组的键和值。   
    // var_dump()函数不仅具有print_r()函数的功能，还可以获取数组中元素的个数和数据类型。   
    //
    //2、删除数据：  
    // PHP中提供的unset()函数既可以删除数组中的某个元素，又可以删除整个数组。示例：       
    $fruits=array('apple','pear');   
    unset($fruits[1]);   
    print_r($fruits);   //Array ( [0] => apple )   
    echo "<br>";  
    unset($fruits);   
    print_r($fruits);   //null    
    echo "<br>";  
    //
    //3、用括号的语法来修改数组元素：$arr[]=value;   示例：    
    $arr=array("a"=>"理论","b"=>"教程","c"=>"第五次课");  
    $arr["a"]="PHP学习";   
    $arr["e"]="第五讲";        
    print_r($arr);   
    echo "<br>";    
    //
    //****************【PHP数组遍历】*****************
    //
    //
    //*************【数组相关函数】*******************
?>