# 在这里写上你的代码 :-)
'''
汉诺塔

　　汉诺塔：汉诺塔（又称河内塔）问题是源于印度一个古老传说的益智玩具。大梵天创造世界的时候做了三根柱子，在一根柱子上从下往上按照大小顺序摞着64片黄金圆盘。大梵天命令婆罗门把圆盘从下面开始按大小顺序重新摆放在另一根柱子上。并且规定，在小圆盘上不能放大圆盘，在三根柱子之间一次只能移动一个圆盘。

实现汉诺塔的基本思路：

汉诺塔主要是有三个塔座A，B，C，要求将三个大小不同，依小到大编号为1，2.....n的圆盘从A移动到塔座C上，要求
　　（1）：每次只能移动一个圆盘
　　（2）：圆盘可以插到A，B，C中任一塔座上
　　（3）：任何时候不能将一个较大的圆盘压在较小的圆盘之上

算法分析：
将 N 个圆盘从左边柱子移动到右边柱子：

[递归的]将 N-1 个圆盘从左边柱子移动到中间柱子。

将最大的圆盘从左边柱子移动到右边柱子。

[递归的]将 N-1 个圆盘从中间柱子移动到右边柱子

'''


#while ture:
temp = input("你的无知，想要几个？：")
n = int(temp)

def hanoi(n, a, b, c):
    if n == 1:
        print(a, '-->', c)
    else:
        hanoi(n - 1, a, c, b)
        print(a, '-->', c)
        hanoi(n - 1, b, a, c)
hanoi(n,'A','B','C')






